# Copyright (c) 2017 Timoth√©e Feuillet
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# API for generator root files
#   The goal of this file is to provide a wrapper around bash
#   that will provide all utilities for generating/updating a complete project.
#
#   The generator file is executed in a restricted subshell without any path
#   nor access to the parent directory (it shouldn't be able to destroy your system)
#


# assumes bash is in the PATH (this is a pretty safe assumption)
cmdcheck which
cmdcheck bash
cmdcheck env

function run_all_generators #(root_file, args...)
{
  (
    # launch the generators
    for submodule in $conf_project_generator
    do
      submodule_name="${submodule%%:*}"
      submodule_url="${submodule#*:}"

      [ ! -f "$gbl_opt_prig_command_dir/../generators/$submodule_name/$1" ] && continue
      run_generator "$submodule_name" "$gbl_opt_prig_command_dir/../generators/$submodule_name/$@"
    done
  )
}

function run_generator
{
  submodule_name="$1"
  shift

  bash_full_path="$(which bash)"
  debug_log "launching generator: $1..."

  (
    cd "$prig_directory"

    # basic env variables (for the generator commands)
    env_vars="in_prig_generator=1"
    env_vars[1]="generator_file=$1"
    env_vars[2]="prig_PATH=$PATH"
    env_vars[3]="prig_directory=$prig_directory"
    env_vars[4]="VERBOSE=${VERBOSE:-0}"
    env_vars[5]="generator_name=$submodule_name"
    env_vars[6]="in_prig_template=${in_prig_template:-0}"

    # build the env from prig's conf variables
    I=10
    conf_var_list="$(compgen -A variable "conf_") $(compgen -A variable "gbl_opt_") $(compgen -A variable "tpl_")"
    for var in $conf_var_list
    do
      var_exists "noconf_$var" && continue
      var_exists "nogen_$var" && continue
      env_vars[$I]="${var}=${!var}"
      let I++
    done

    # save code and shift
    cmd="$1"
    shift

    # Setup the env+PATH and launch the file in a restricted shell
    tee_cmd env -i - "${env_vars[@]}" PATH="$gbl_opt_prig_command_dir/cmd/generator_env" "$bash_full_path" --restricted -- <(cat "$gbl_opt_prig_command_dir/cmd/generator_init"; cat "$cmd") "$@"
  )
}
